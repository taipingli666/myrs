<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.choice.domain.repository.user.UserDao" >
  <resultMap id="BaseResultMap" type="com.choice.domain.entity.user.ChannelUser" >
    <id column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="hos_id" property="hosId" jdbcType="INTEGER" />
    <result column="hos_name" property="hosName" jdbcType="VARCHAR" />
    <result column="dept_code" property="deptCode" jdbcType="VARCHAR" />
    <result column="true_name" property="trueName" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="INTEGER" />
    <result column="tel" property="tel" jdbcType="VARCHAR" />
    <result column="mobile" property="mobile" jdbcType="VARCHAR" />
    <result column="card" property="card" jdbcType="VARCHAR" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="introduce" property="introduce" jdbcType="VARCHAR" />
    <result column="team_id" property="teamId" jdbcType="INTEGER" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="add_time" property="addTime" jdbcType="TIMESTAMP" />
    <result column="add_person" property="addPerson" jdbcType="INTEGER" />
    <result column="edit_time" property="editTime" jdbcType="TIMESTAMP" />
    <result column="edit_person" property="editPerson" jdbcType="INTEGER" />
    <result column="is_delete" property="isDelete" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    user_id, user_name, password, hos_id,dept_code, true_name, sex, tel, mobile, card, title,
    introduce, team_id, remark, add_time, add_person, edit_time, edit_person, is_delete
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from channel_user
    where user_id = #{userId,jdbcType=INTEGER}
  </select>

  <select id="selectByUserInfo" resultMap="BaseResultMap" parameterType="com.choice.domain.entity.user.ChannelUser" >
    select
    <include refid="Base_Column_List" />
    from channel_user
    where is_delete = 0
    <if test="userId != null" >
      and user_id = #{userId,jdbcType=VARCHAR}
    </if>
    <if test="userName != null" >
      and user_name = #{userName,jdbcType=VARCHAR}
    </if>
    <if test="hosId != null" >
      and hos_id = #{hosId,jdbcType=VARCHAR}
    </if>
    <if test="deptCode != null" >
      and dept_code = #{deptCode,jdbcType=VARCHAR}
    </if>
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from channel_user
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" useGeneratedKeys="true" keyProperty="userId" parameterType="com.choice.domain.entity.user.ChannelUser" >
    insert into channel_user (user_id, user_name, password, 
      hos_id,dept_code, true_name, sex,
      tel, mobile, card, 
      title, introduce, team_id, 
      remark, add_time, add_person, 
      edit_time, edit_person, is_delete
      )
    values (#{userId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{hosId,jdbcType=VARCHAR},#{deptCode,jdbcType=VARCHAR}, #{trueName,jdbcType=VARCHAR}, #{sex,jdbcType=INTEGER},
      #{tel,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, #{card,jdbcType=VARCHAR}, 
      #{title,jdbcType=VARCHAR}, #{introduce,jdbcType=VARCHAR}, #{teamId,jdbcType=INTEGER}, 
      #{remark,jdbcType=VARCHAR}, #{addTime,jdbcType=TIMESTAMP}, #{addPerson,jdbcType=INTEGER}, 
      #{editTime,jdbcType=TIMESTAMP}, #{editPerson,jdbcType=INTEGER}, #{isDelete,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.choice.domain.entity.user.ChannelUser" >
    insert into channel_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="hosId != null" >
        hos_id,
      </if>
      <if test="deptCode != null" >
        dept_code,
      </if>
      <if test="trueName != null" >
        true_name,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="tel != null" >
        tel,
      </if>
      <if test="mobile != null" >
        mobile,
      </if>
      <if test="card != null" >
        card,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="introduce != null" >
        introduce,
      </if>
      <if test="teamId != null" >
        team_id,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="addTime != null" >
        add_time,
      </if>
      <if test="addPerson != null" >
        add_person,
      </if>
      <if test="editTime != null" >
        edit_time,
      </if>
      <if test="editPerson != null" >
        edit_person,
      </if>
      <if test="isDelete != null" >
        is_delete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="hosId != null" >
        #{hosId,jdbcType=VARCHAR},
      </if>
      <if test="deptCode != null" >
        #{deptCode,jdbcType=VARCHAR},
      </if>
      <if test="trueName != null" >
        #{trueName,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="tel != null" >
        #{tel,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="card != null" >
        #{card,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="introduce != null" >
        #{introduce,jdbcType=VARCHAR},
      </if>
      <if test="teamId != null" >
        #{teamId,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="addTime != null" >
        #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="addPerson != null" >
        #{addPerson,jdbcType=INTEGER},
      </if>
      <if test="editTime != null" >
        #{editTime,jdbcType=TIMESTAMP},
      </if>
      <if test="editPerson != null" >
        #{editPerson,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null" >
        #{isDelete,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.choice.domain.entity.user.ChannelUser" >
    update channel_user
    <set >
      <if test="userName != null and userName != ''" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null and password != ''" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="hosId != null" >
        hos_id = #{hosId,jdbcType=VARCHAR},
      </if>
      <if test="deptCode != null" >
        dept_code = #{deptCode,jdbcType=VARCHAR},
      </if>
      <if test="trueName != null" >
        true_name = #{trueName,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="tel != null" >
        tel = #{tel,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="card != null" >
        card = #{card,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="introduce != null" >
        introduce = #{introduce,jdbcType=VARCHAR},
      </if>
      <if test="teamId != null" >
        team_id = #{teamId,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="addTime != null" >
        add_time = #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="addPerson != null" >
        add_person = #{addPerson,jdbcType=INTEGER},
      </if>
      <if test="editTime != null" >
        edit_time = #{editTime,jdbcType=TIMESTAMP},
      </if>
      <if test="editPerson != null" >
        edit_person = #{editPerson,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null" >
        is_delete = #{isDelete,jdbcType=INTEGER},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.choice.domain.entity.user.ChannelUser" >
    update channel_user
    set user_name = #{userName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      hos_id = #{hosId,jdbcType=INTEGER},
      dept_code = #{deptCode,jdbcType=INTEGER},
      true_name = #{trueName,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=INTEGER},
      tel = #{tel,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      card = #{card,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      introduce = #{introduce,jdbcType=VARCHAR},
      team_id = #{teamId,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      add_time = #{addTime,jdbcType=TIMESTAMP},
      add_person = #{addPerson,jdbcType=INTEGER},
      edit_time = #{editTime,jdbcType=TIMESTAMP},
      edit_person = #{editPerson,jdbcType=INTEGER},
      is_delete = #{isDelete,jdbcType=INTEGER}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <select id="getListByPage" resultMap="BaseResultMap" parameterType="com.choice.domain.entity.user.ChannelUser" >
    select 
    a.user_id, a.user_name, a.password, a.hos_id,a.dept_code, a.true_name, a.sex, a.tel, a.mobile, a.card, a.title,
    a.introduce, a.team_id, a.remark, a.add_time, a.add_person, a.edit_time, a.edit_person, a.is_delete,b.hos_name
    from channel_user a
    inner join common_hospital b
    on a.hos_id = b.hos_id
    <where>
    	a.is_delete = 0
        <if test="hosName != null and hosName != ''">
          AND b.hos_name like CONCAT(CONCAT('%',#{hosName}),'%')
        </if>
	   	<if test="userName != null and userName != ''">
	   		AND user_name like CONCAT(CONCAT('%',#{userName}),'%')
	   	</if>
	   	<if test="hosId != null and hosId != ''">
	   		AND a.hos_id = #{hosId,jdbcType=VARCHAR}
	   	</if>
    </where>
  </select>
  
  <select id="getListByPageExceptAdmin" resultMap="BaseResultMap" parameterType="com.choice.domain.entity.user.ChannelUser" >
    select 
    a.user_id, a.user_name, a.password, a.hos_id,a.dept_code, a.true_name, a.sex, a.tel, a.mobile, a.card, a.title,
    a.introduce, a.team_id, a.remark, a.add_time, a.add_person, a.edit_time, a.edit_person, a.is_delete,c.hos_name
    from channel_user a 
	INNER JOIN channel_user_role b
	ON a.user_id = b.user_id
	inner join common_hospital c
	on a.hos_id = c.hos_id
    <where>
    	a.is_delete = 0
    	and b.role_id != 1
    	<if test="userName != null and userName != ''">
    		AND user_name like CONCAT(CONCAT('%',#{userName}),'%')
    	</if>
        <if test="hosName != null and hosName != ''">
          AND c.hos_name like CONCAT(CONCAT('%',#{hosName}),'%')
        </if>
    </where>
  </select>
  
  <delete id="deleteUsers" >
  	update	channel_user SET  is_delete = 1 where user_id in
  	<foreach collection="array" index="index" item="item"
            open="(" separator="," close=")">
            #{item}
    </foreach>
  </delete>
  
  <!-- 专家管理 -->
  <select id="getListByPageForExpert" resultMap="BaseResultMap">
    select a.*
    from channel_user a INNER JOIN channel_user_role b on b.user_id = a.user_id 
    INNER JOIN channel_role c on b.role_id = c.role_id
    <where>
    	a.is_delete = 0 
    	<if test="user.userName != null and user.userName != ''">
    		AND a.user_name like CONCAT(CONCAT('%',#{user.userName}),'%')
    	</if>
    	<if test="subString != null and subString != ''">
    		and a.hos_id in
		  	<foreach collection="subString" index="index" item="item"
		            open="(" separator="," close=")">
		            #{item}
		    </foreach>
    	</if>
    	and b.role_id=5
    </where>
  </select>
  
  <!-- 团队管理（修改时查询得到所有团队成员,不包含专家） -->
  <select id="getTeamsTableUpdateForMember" resultMap="BaseResultMap" parameterType="java.lang.Integer">
	select
  	<include refid="Base_Column_List" />
  	from channel_user x where  x.is_delete=0 and x.team_id=#{teamId,jdbcType=INTEGER} and x.user_id not in (select a.user_id
    from channel_user a INNER JOIN channel_user_role b on b.user_id = a.user_id 
    INNER JOIN channel_role c on b.role_id = c.role_id where a.is_delete = 0 and b.role_id=5)
  </select>
  
  
  <!-- 团队管理（修改时查询得到所有团队成员的id,包含专家） -->
  <select id="getPrevIds" resultType="java.lang.Integer" parameterType="java.lang.Integer">
	select x.user_id from channel_user x where x.is_delete=0 and x.team_id=#{teamId,jdbcType=INTEGER}
  </select>
  
  <!-- 团队管理（修改或新增时查询得到所有团队成员和没组团队的用户,不包含专家） -->
  <select id="getTeamsTableUpdateForUser" resultMap="BaseResultMap">
	select
  	<include refid="Base_Column_List" />
  	from channel_user x where  x.is_delete=0 and (x.team_id=0 
  	<if test="teamId != null and teamId != ''">
    	or x.team_id=#{teamId,jdbcType=INTEGER}
    </if>
  	) 
  	<if test="name != null and name != ''">
    	AND (x.user_name like CONCAT(CONCAT('%',#{name}),'%')
    	or x.true_name like CONCAT(CONCAT('%',#{name}),'%'))
    </if>
  	and x.user_id not in (select a.user_id
    from channel_user a INNER JOIN channel_user_role b on b.user_id = a.user_id 
    INNER JOIN channel_role c on b.role_id = c.role_id where a.is_delete = 0 and b.role_id=5)
    limit #{page,jdbcType=INTEGER},#{size,jdbcType=INTEGER}
  </select>
  <select id="login" resultMap="BaseResultMap">
  	select
  	<include refid="Base_Column_List" />
  	from channel_user a where  a.user_name = #{userName} and a.password = #{password} and a.is_delete = 0
  </select>
  <!-- 没组团队的专家列表 -->
  <select id="getExpertList" resultMap="BaseResultMap" parameterType="com.choice.domain.entity.user.ChannelUser" >
    select a.*
    from channel_user a INNER JOIN channel_user_role b on b.user_id = a.user_id 
    INNER JOIN channel_role c on b.role_id = c.role_id
    <where>
    	a.is_delete = 0 
    	and a.team_id=0
    	and b.role_id=5
    </where>
  </select>
  
  <!-- 更新团队名（加入团队） -->
 <update id="joinTeam">
  	update channel_user SET  team_id = #{teamId} where user_id in
  	<foreach collection="substring" index="index" item="item"
            open="(" separator="," close=")">
            #{item}
    </foreach>
 </update>
 
 <!-- 移除团队 -->
 <update id="leaveTeam" parameterType="java.lang.Integer">
 	update channel_user SET team_id = 0 where user_id = #{userId,jdbcType=INTEGER}
 </update>
 
 
  <!-- 移除 -->
 <update id="userForLeaveTeam">
  	update channel_user SET  team_id = 0 where user_id in
  	<foreach collection="array" index="index" item="item"
            open="(" separator="," close=")">
            #{item}
    </foreach>
 </update>
 
 <!-- 删除时找到该teamid的所有用户 -->
 <select id="getUserIdsForLeave" resultType="java.lang.Integer" parameterType="java.lang.Integer">
 	select a.user_id from channel_user a where  a.is_delete=0 and team_id=#{teamId,jdbcType=INTEGER}
 </select>
 <!-- 删除时找到该teamid的所有用户 -->
 <select id="getHosName" resultType="com.choice.domain.entity.user.ChannelUser">
 	select a.hos_id as hosId,b.hos_name as hosName from channel_user a,common_hospital b where  a.hos_id=#{hosId} and a.hos_id = b.hos_id
 </select>
 
 <!-- 获取该用户的角色列表 -->
 <select id="getRoleIdList" resultType="java.lang.Integer" parameterType="java.lang.Integer">
 	select b.role_id from channel_user a 
	inner JOIN channel_user_role b on b.user_id = a.user_id 
	inner JOIN channel_role c on b.role_id = c.role_id 
	where a.is_delete = 0 and a.user_id=#{userId,jdbcType=INTEGER}
 </select>
 
 <!-- 获取医疗机构下的团队关联的所有专家列表 -->
 <select id="getExpectListByHosId" resultMap="BaseResultMap" parameterType="java.lang.Integer">
 	select 
 	<include refid="Base_Column_List" /> 
 	from channel_user u where u.user_id in 
	(select t.team_leader 
        from common_doctor_team t 
				where t.is_delete=0 and t.hos_id=#{hosId,jdbcType=INTEGER}) 
 </select>
 
 <!-- 获取已经组团队的专家列表 -->
 <select id="getJoinedExpectList" resultMap="BaseResultMap">
 	select 
 	a.*
    from channel_user a INNER JOIN channel_user_role b on b.user_id = a.user_id 
    INNER JOIN channel_role c on b.role_id = c.role_id
    where
    	a.is_delete = 0 
    	and a.team_id!=0
    	and b.role_id=5
 </select>
 
 <!-- 获取当前登录人所属团队的团队长 -->
 <select id="getExpertByTeamId" parameterType="Integer" resultMap="BaseResultMap">
 	SELECT a.user_id,a.user_name FROM channel_user a
	WHERE user_id = (
		SELECT c.team_leader FROM common_doctor_team c WHERE team_id = #{0}
	)
 </select>
 
 <!-- 获取当前登录人机构下的除当前合同签约医生之外的其他专家 -->
 <select id="getOtherExpertList" resultMap="BaseResultMap">
 	select 
 	<include refid="Base_Column_List" /> 
 	from channel_user u where u.user_id in 
	(select t.team_leader 
        from common_doctor_team t 
		where t.is_delete=0 and t.hos_id=#{0}
		and u.user_id!=#{1} 
	) 
 </select>
 
 <select id="checkUser" parameterType="com.choice.domain.entity.user.ChannelUser" resultType="int">
 	select count(1) from channel_user where is_delete = 0 and user_name = #{userName,jdbcType=VARCHAR}
 	<if test="userId != null">
 		and user_id != #{userId}
 	</if>
 </select>
</mapper>