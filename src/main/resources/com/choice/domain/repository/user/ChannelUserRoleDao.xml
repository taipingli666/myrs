<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.choice.domain.repository.user.ChannelUserRoleDao" >
  <resultMap id="BaseResultMap" type="com.choice.domain.entity.user.ChannelUserRole" >
    <id column="user_role_id" property="userRoleId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="role_id" property="roleId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    user_role_id, user_id, role_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from channel_user_role
    where user_role_id = #{userRoleId,jdbcType=INTEGER}
  </select>
  
  <!-- 根据用户id查询权限 -->
  <select id="roleIdByUserId" resultType="int">
  	select role_id from channel_user_role 
  	where user_id = #{userId}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from channel_user_role
    where user_role_id = #{userRoleId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.choice.domain.entity.user.ChannelUserRole" >
    insert into channel_user_role (user_role_id, user_id, role_id
      )
    values (#{userRoleId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{roleId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.choice.domain.entity.user.ChannelUserRole" >
    insert into channel_user_role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userRoleId != null" >
        user_role_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="roleId != null" >
        role_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userRoleId != null" >
        #{userRoleId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="roleId != null" >
        #{roleId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.choice.domain.entity.user.ChannelUserRole" >
    update channel_user_role
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="roleId != null" >
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
    </set>
    where user_role_id = #{userRoleId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.choice.domain.entity.user.ChannelUserRole" >
    update channel_user_role
    set user_id = #{userId,jdbcType=INTEGER},
      role_id = #{roleId,jdbcType=INTEGER}
    where user_role_id = #{userRoleId,jdbcType=INTEGER}
  </update>
  <delete id="delRolesByUserId" parameterType="int">
  		DELETE FROM channel_user_role WHERE user_id = #{id}
  </delete>
  <insert id="operationUserRole" parameterType="list">
	insert into channel_user_role (user_role_id, user_id, role_id)   
	values  
    <foreach collection="list" item="item" index="index" separator="," >  
        (null,#{item.userId},#{item.roleId})  
    </foreach> 	
  </insert>
  <delete id="delRoles" parameterType="int">
  		DELETE FROM channel_user_role WHERE role_id in
  		<foreach collection="array" index="index" item="item"
            open="(" separator="," close=")">
            #{item}
    </foreach>
  </delete>
</mapper>